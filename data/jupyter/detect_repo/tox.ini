[tox]
envlist =
    # code linters/stylers
    black
    pyroma
    flake8
    # documentation linters/checkers
    # doc8
    docstr-coverage
    # docs
    # the actual tests
    pytest

[testenv]
deps =
    pytest
    pytest-cov
    pytest-pep8
    pydocstyle
commands =
    pip install -e .
    pytest . -m "not slow"
    pydocstyle

[testenv:pytest]
commands = 
    pytest -m "not slow"
;    coverage erase
;    coverage run -p -m pytest -m "not slow"
;    coverage combine
;    coverage report --include=*mb_detect/* --skip-empty -m --ignore-errors
deps =
    pytest
;    coverage

[testenv:pylint]
deps = pylint
skip_install = true
commands = pylint --exit-zero src/mb_detect

[testenv:black]
skip_install = true
deps =
    black
commands =
    black src/ tests/ setup.py
description = Apply Black to python source code.

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-bandit
    flake8-colors
    flake8-black
    flake8-docstrings
    flake8-import-order
    flake8-bugbear
    flake8-broken-line
    pep8-naming
    pydocstyle
    darglint
commands =
    flake8 src/ tests/ setup.py --exit-zero
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

[testenv:pyroma]
skip_install = true
deps =
    pyroma
commands = 
    pyroma -n 0 . 
description = Run the pyroma tool to check the package friendliness of the project.


[testenv:doc8]
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/
description = Run the doc8 tool to check the style of the RST files in the project docs.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/ tests/ setup.py --skip-private --skip-magic -v1 --fail-under 0
description = Run the docstr-coverage tool to check documentation coverage

[testenv:docs]
changedir = docs
extras =
    docs
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt
whitelist_externals =
    /bin/cp
    /bin/cat
    /bin/mkdir

####################
# Deployment tools #
####################

[testenv:bumpversion]
commands = bumpversion {posargs}
skip_install = true
passenv = HOME
deps =
    bumpversion

[testenv:build]
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

[testenv:finish]
skip_install = true
passenv = HOME
deps =
    {[testenv:build]deps}
    {[testenv:release]deps}
    bumpversion
commands =
    bumpversion release
    {[testenv:release]commands}
    git push
    bumpversion patch
    git push
whitelist_externals =
    /usr/bin/git